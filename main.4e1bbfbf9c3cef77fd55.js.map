{"version":3,"sources":["webpack:///./js/script.js"],"names":["genres","videoYou","baseURL","IMG_URL","API_KEY","IMAGE_NOT_FOUND","Version","$moviesList","document","querySelector","$searchFormError","renderFilms","pageNumber","renderMoviesList","movies","moviesList","results","$fragment","createDocumentFragment","forEach","movie","imgPath","filmTitle","movieId","$li","$p","$img","src","poster_path","year","release_date","substring","trim","title","original_title","card","id","createElement","className","setAttribute","textContent","append","addEventListener","activeDetailsPage","appendChild","fetchPopularMovies","classList","replace","fetch","then","res","json","catch","console","log","data","inputValue","searchForm","$input","$btnsWrapper","$numberOfPage","versionAtLocalStorage","localStorage","getItem","fetchFilms","number","responce","refs","prevBtn","add","remove","total_pages","nextBtn","length","lazyLoadingFilms","apiError","plaginationNavigation","event","innerHTML","target","window","scrollBy","innerHeight","IntersectionObserver","observer","isIntersecting","disconnect","root","rootMargin","threshold","observe","lastChild","preventDefault","value","reset","selectFilm","logoRef","homeBtn","libraryBtn","detailsPage","detailsPageVideoId","homePage","libraryPage","addBtnWatched","addBtnQueue","watchedBtn","queueBtn","activeHomePage","removeEventListener","drawWatchedFilmList","drawQueueFilmList","itsLibraryFilm","nodeName","markup","filmId","parseLibrary","JSON","parse","find","imgUrl","posterRef","titleRef","votesRef","vote_average","vote_count","popularityRef","popularity","originalTitleRef","plotRef","overview","filmsGenres","genre_ids","filter","item","genre","push","name","genreRef","join","monitorButtonStatusText","showDetails","toggleToWatched","toggleToQueue","map","el","key","attrs","element","class","type","width","height","frameborder","error","watchedBtnRef","queueBtnRef","queueId","watchedId","includes","setItem","filmQueueLocalStorage","film","stringify","filmsWatchedLocalStorage","$libraryList","createLibraryCardFunc","voteAverage","$vote","switchActiveButtonTo","btnName","contains","filmsQueue","$error","filmsWatched","defaultVersion","body","toolbar","versionDescription","youtubeTrailer","location","reload"],"mappings":"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","file":"main.4e1bbfbf9c3cef77fd55.js","sourcesContent":["'use strict';\r\nconst baseURL = 'https://api.themoviedb.org/3';\r\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500/';\r\nconst API_KEY = 'ca745db198ca3fbe8342f07480e09405';\r\nconst IMAGE_NOT_FOUND =\r\n  'https://c4.wallpaperflare.com/wallpaper/198/872/888/numbers-404-not-found-simple-background-minimalism-wallpaper-preview.jpg';\r\nconst Version = {\r\n  REGULAR: 'regular',\r\n  PRO: 'pro',\r\n};\r\n\r\n//INIT\r\nconst $moviesList = document.querySelector('ul.movies');\r\n// ссылка на параграф с ошибкой\r\nconst $searchFormError = document.querySelector('p.search-form__error');\r\n\r\nlet renderFilms = [];\r\nlet genres;\r\nlet pageNumber = 1;\r\nlet videoYou;\r\n\r\n//FUNCTIONS\r\nconst createCard = (imgPath, filmTitle, movieId) => {\r\n  //создаем елементы\r\n  const $li = document.createElement('li');\r\n  const $p = document.createElement('p');\r\n  const $img = document.createElement('img');\r\n  //ставим классы\r\n  $li.className = 'movies__item';\r\n  $p.className = 'movies__title';\r\n  $img.className = 'movies__image';\r\n  //наполняем елементы\r\n  $img.setAttribute('src', imgPath);\r\n  $p.textContent = filmTitle;\r\n  // собираем li\r\n  $li.append($p);\r\n  $li.append($img);\r\n\r\n  //добавляем слушатель с movieId и значением false (для movieLibarary)\r\n  $li.addEventListener('click', function () {\r\n    activeDetailsPage(movieId, false);\r\n  });\r\n\r\n  return $li;\r\n};\r\n\r\nconst renderMoviesList = movies => {\r\n  const moviesList = movies.results;\r\n\r\n  // очищаем предыдущие результаты\r\n  // $moviesList.innerHTML = '';\r\n\r\n  // создаем фрагмент  чтобы добавить все фильмы в html одновременно\r\n  //запомняем глобальную переменную HTML списком фильмов\r\n\r\n  const $fragment = document.createDocumentFragment();\r\n  //создаем фильмы\r\n  moviesList.forEach(movie => {\r\n    // подменяем изображение плейсхолдером если его нет в API\r\n    const src = movie.poster_path\r\n      ? IMG_URL + movie.poster_path\r\n      : IMAGE_NOT_FOUND;\r\n    const year = movie.release_date.substring(0, 4).trim();\r\n    const title = `${movie.original_title} (${year})`;\r\n    const card = createCard(src, title, movie.id);\r\n    $fragment.appendChild(card);\r\n  });\r\n\r\n  // отрисовываем фильмы\r\n  $moviesList.append($fragment);\r\n  //сохраняем список фильмов\r\n  renderFilms = movies;\r\n};\r\n//делаем запрос к API за жанрами\r\nconst fetchGenres = () => {\r\n  fetch(`${baseURL}/genre/movie/list?api_key=${API_KEY}&language=en-US`)\r\n    .then(res => {\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      genres = data.genres;\r\n    })\r\n    .catch(console.log);\r\n};\r\n\r\n//делаем запрос к API за популярными фильмами\r\nconst fetchPopularMovies = () => {\r\n  $searchFormError.classList.replace(\r\n    'search-form__error--visibale',\r\n    'search-form__error--hidden',\r\n  );\r\n\r\n  //запоминаем genres в localStorage (так как не выходит сделать async)\r\n  fetch(\r\n    `${baseURL}/movie/popular?api_key=${API_KEY}&language=en-US&page=${pageNumber}`,\r\n  )\r\n    .then(res => res.json())\r\n    .then(renderMoviesList)\r\n    .catch(console.log);\r\n};\r\n\r\n//RUN\r\n\r\nfetchGenres();\r\nfetchPopularMovies();\r\n\r\n//TODO\r\n/**\r\n * 2 page start\r\n *\r\n */\r\n\r\n// ведённое слово-названия фильма, который ищут\r\nlet inputValue = ' ';\r\n// ссылка на форму\r\nconst searchForm = document.querySelector('.search-form');\r\n// ссылка на инпут\r\nconst $input = document.querySelector('.search-form__input');\r\n\r\n// ссылка на обёртку кнопок\r\nconst $btnsWrapper = document.querySelector('.page-counter__wrapper');\r\n// ссылка на кнопку Prev\r\nconst $prevBtn = document.querySelector('[data-action=\"previous\"]');\r\n// ссылка на кнопку Next\r\nconst $nextBtn = document.querySelector('[data-action=\"next\"]');\r\n// ссылка на кнопку \"номер странички\"\r\nconst $numberOfPage = document.querySelector('.btn_page-number');\r\n// значение переменной version, которое хранится в LocalStorage\r\nlet versionAtLocalStorage = localStorage.getItem('version');\r\n\r\n// На форму поставила слушатель событий\r\nsearchForm.addEventListener('submit', searchFilms);\r\n\r\n// функция поиска фильма\r\nfunction searchFilms(event) {\r\n  // убрала дефолтное поведение формы\r\n  event.preventDefault();\r\n\r\n  //   Записываю в переменную inputValue значение записанное в инпут(название фильма которое ищут)\r\n  inputValue = $input.value.trim();\r\n\r\n  // функция очистки результата поиска перед новым вводом поиска фильма\r\n  searchForm.reset();\r\n\r\n  // Убрать сообщение об ошибке при следующем поиске\r\n  $searchFormError.classList.replace(\r\n    'search-form__error--visibale',\r\n    'search-form__error--hidden',\r\n  );\r\n\r\n  // Если нажали Enter при пустом инпуте, тогда на страничке отображается список популярных\r\n  // фильмов (вызывается fetchPopularMovies())\r\n  if (inputValue === '') {\r\n    fetchPopularMovies();\r\n    return;\r\n  } else {\r\n    // функция поиска фильма\r\n    $moviesList.innerHTML = '';\r\n    fetchFilms(inputValue);\r\n  }\r\n}\r\n//TODO\r\n// функция отправки запроса на API\r\nfunction fetchFilms(inputValue, number = 1) {\r\n  if (number === 1) {\r\n    $numberOfPage.textContent = number;\r\n    pageNumber = number;\r\n  }\r\n\r\n  // При попытке пролистать обратно (нажать btn Prev) при первой странице отображения\r\n  // поиска (pageNumber=1), fetch не выполнялся\r\n  if (pageNumber < 1) {\r\n    $numberOfPage.textContent = 1;\r\n    return;\r\n  }\r\n\r\n  // возвращаем из функции промис\r\n  return fetch(\r\n    `${baseURL}/search/movie?api_key=${API_KEY}&language=en-US&page=${pageNumber}&include_adult=false&query=${inputValue}`,\r\n  )\r\n    .then(responce => responce.json())\r\n    .then(movies => {\r\n      pageNumber === 1 || pageNumber < 1\r\n        ? refs.prevBtn.classList.add('hidden')\r\n        : refs.prevBtn.classList.remove('hidden');\r\n      pageNumber === movies.total_pages\r\n        ? refs.nextBtn.classList.add('hidden')\r\n        : refs.nextBtn.classList.remove('hidden');\r\n      // массив приходящих фильмов(каждый фильм в виде обьекта)\r\n      let moviesList = movies.results;\r\n\r\n      // в случае ответа пустым массивом отрисовывать ошибку\r\n      if (moviesList.length === 0) {\r\n        $searchFormError.classList.replace(\r\n          'search-form__error--hidden',\r\n          'search-form__error--visibale',\r\n        );\r\n        fetchPopularMovies();\r\n        return;\r\n      }\r\n\r\n      renderMoviesList(movies);\r\n\r\n      // если version pro, тогда применяется «Ленивая» загрузка изображений\r\n      if (versionAtLocalStorage === 'pro') {\r\n        // При включении версии pro, pageNumber принимает начальное значение\r\n        pageNumber = 1;\r\n        lazyLoadingFilms();\r\n      }\r\n    })\r\n    .catch(apiError => console.log(apiError));\r\n}\r\n\r\n// Делегирование событий на обёртку кнопок\r\n$btnsWrapper.addEventListener('click', plaginationNavigation);\r\n\r\nfunction plaginationNavigation(event) {\r\n  $moviesList.innerHTML = '';\r\n\r\n  if (event.target.id === 'page-counter__btn-previous') {\r\n    // уменьшение pageNumber на 1\r\n    if (pageNumber === 1) {\r\n      return;\r\n    }\r\n    pageNumber -= 1;\r\n    // изменение текста $numberOfPage\r\n    $numberOfPage.textContent = pageNumber;\r\n    fetchFilms(inputValue, pageNumber);\r\n  } else if (event.target.id === 'page-counter__btn-next') {\r\n    // увеличение pageNumber на 1\r\n    if (pageNumber >= renderFilms.total_pages) {\r\n      return;\r\n    }\r\n    ++pageNumber;\r\n    // изменение текста $numberOfPage\r\n    $numberOfPage.textContent = pageNumber;\r\n    fetchFilms(inputValue, pageNumber);\r\n  }\r\n  pageNumber === 1 || pageNumber < 1\r\n    ? refs.prevBtn.classList.add('display-none')\r\n    : refs.prevBtn.classList.remove('display-none');\r\n  window.scrollBy(0, -window.innerHeight);\r\n}\r\n\r\n// функция Ленивой загрузки\r\nfunction lazyLoadingFilms() {\r\n  // При lazyLoading прятать кнопки пагинации\r\n  $btnsWrapper.classList.add('hidden');\r\n\r\n  // устанавливаем настройки\r\n  const options = {\r\n    // родитель целевого элемента - область просмотра\r\n    root: null,\r\n    // без отступов\r\n    rootMargin: '0px',\r\n    // процент пересечения - половина изображения\r\n    threshold: 0.5,\r\n  };\r\n\r\n  const callback = function (moviesList, observer) {\r\n    // для каждой записи-целевого элемента\r\n    moviesList.forEach(movie => {\r\n      // если элемент является наблюдаемым, создаём карточку фильма функций createCard()\r\n      if (movie.isIntersecting) {\r\n        fetchFilms(inputValue, ++pageNumber);\r\n\r\n        // если пришло менее 20 фильмов,прекращаем наблюдение\r\n        if (moviesList.length < 20) {\r\n          observer.disconnect();\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  // создаем наблюдатель\r\n  const observer = new IntersectionObserver(callback, options);\r\n\r\n  // Dom елемент за которым наблюдаем\r\n  // последний елемент списка фильмов\r\n  observer.observe($moviesList.lastChild);\r\n}\r\n\r\n//TODO\r\n/**\r\n * 2 page end\r\n *\r\n */\r\n\r\n//TODO\r\n/**\r\n * 3 page start\r\n *\r\n */\r\nlet selectFilm = {};\r\n\r\nconst refs = {\r\n  logoRef: document.querySelector('.js-logo'),\r\n  homeBtn: document.querySelector('button[data-action=\"btn-home\"]'),\r\n  libraryBtn: document.querySelector('button[data-action=\"btn-library\"]'),\r\n\r\n  detailsPage: document.querySelector('.js-details-page'),\r\n\r\n  // Trailer video\r\n  detailsPageVideoId: document.querySelector('.js-video'),\r\n\r\n  homePage: document.querySelector('.js-home-page'),\r\n  libraryPage: document.querySelector('.js-library-page'),\r\n\r\n  addBtnWatched: document.querySelector('button[data-add=\"btn-watched\"]'),\r\n  addBtnQueue: document.querySelector('button[data-add=\"btn-queue\"]'),\r\n\r\n  prevBtn: document.querySelector('button[data-action=\"previous\"]'),\r\n  nextBtn: document.querySelector('button[data-action=\"next\"]'),\r\n  watchedBtn: document.querySelector('button[data-action=\"btn-watched\"]'),\r\n  queueBtn: document.querySelector('button[data-action=\"btn-queue\"]'),\r\n};\r\n\r\nrefs.logoRef.addEventListener('click', activeHomePage);\r\nrefs.homeBtn.addEventListener('click', activeHomePage);\r\nrefs.libraryBtn.addEventListener('click', activeLibraryPage);\r\n\r\nfunction activeHomePage() {\r\n  window.scrollBy(0, -window.innerHeight);\r\n  //Активация подсветки кнопки Home\r\n\r\n  refs.homeBtn.classList.add('onClick');\r\n  refs.libraryBtn.classList.remove('onClick');\r\n\r\n  //Показываем Home Page\r\n  refs.homePage.classList.remove('visually-hidden');\r\n\r\n  // Прячем все страницы кроме Home Page\r\n  refs.detailsPage.classList.add('visually-hidden');\r\n  refs.libraryPage.classList.add('visually-hidden');\r\n\r\n  // Подключение пагинации\r\n  refs.prevBtn.addEventListener('click', plaginationNavigation);\r\n  refs.nextBtn.addEventListener('click', plaginationNavigation);\r\n\r\n  //удаление ненужных слушателей\r\n  refs.watchedBtn.removeEventListener('click', drawWatchedFilmList);\r\n  refs.queueBtn.removeEventListener('click', drawQueueFilmList);\r\n  refs.addBtnWatched.removeEventListener('click', drawWatchedFilmList);\r\n  refs.addBtnQueue.removeEventListener('click', drawQueueFilmList);\r\n}\r\n\r\nfunction activeLibraryPage() {\r\n  window.scrollBy(0, -window.innerHeight);\r\n  //Активация подсветки кнопки my library\r\n  refs.homeBtn.classList.remove('onClick');\r\n  refs.libraryBtn.classList.add('onClick');\r\n\r\n  //Показываем Library Page\r\n  refs.libraryPage.classList.remove('visually-hidden');\r\n\r\n  // Прячем все страницы кроме Library Page\r\n  refs.detailsPage.classList.add('visually-hidden');\r\n  refs.homePage.classList.add('visually-hidden');\r\n\r\n  refs.watchedBtn.addEventListener('click', drawWatchedFilmList);\r\n  refs.queueBtn.addEventListener('click', drawQueueFilmList);\r\n  //функция отрисовки фильмов из очереди\r\n  drawWatchedFilmList();\r\n\r\n  //удаление ненужных слушателей\r\n  $btnsWrapper.removeEventListener('click', plaginationNavigation);\r\n  refs.addBtnWatched.removeEventListener('click', toggleToWatched);\r\n  refs.addBtnQueue.removeEventListener('click', toggleToQueue);\r\n}\r\n\r\nfunction activeDetailsPage(movieId, itsLibraryFilm) {\r\n  window.scrollBy(0, -window.innerHeight);\r\n  // убрал подсветку кнопок\r\n  refs.homeBtn.classList.remove('onClick');\r\n  refs.libraryBtn.classList.remove('onClick');\r\n\r\n  if (event.target.nodeName !== 'IMG') {\r\n    return;\r\n  }\r\n\r\n  const id = movieId;\r\n  const filmId = renderFilms.results;\r\n  let markup;\r\n\r\n  const fetchVideo = () => {\r\n    refs.detailsPageVideoId.innerHTML = '';\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${API_KEY}&include_adult=false&language=en-US`,\r\n    )\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(({ results }) => {\r\n        videoYou = results.map(el => el.key);\r\n\r\n        markup = createdVideoTpl(videoYou);\r\n\r\n        refs.detailsPageVideoId.appendChild(markup);\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  if (itsLibraryFilm) {\r\n    const parseLibrary = [\r\n      ...JSON.parse(localStorage.getItem('filmQueue')),\r\n      ...JSON.parse(localStorage.getItem('filmWatched')),\r\n    ];\r\n\r\n    selectFilm = parseLibrary.find(selectFilm => selectFilm.id === id);\r\n  } else {\r\n    selectFilm = filmId.find(selectFilm => selectFilm.id === id);\r\n  }\r\n  showDetails(selectFilm);\r\n  refs.detailsPage.classList.remove('visually-hidden');\r\n\r\n  // Прячем все страницы кроме Library Page\r\n  refs.libraryPage.classList.add('visually-hidden');\r\n  refs.homePage.classList.add('visually-hidden');\r\n\r\n  // Добавляем кнопки добавления/удаления фильмов\r\n  refs.addBtnWatched.addEventListener('click', toggleToWatched);\r\n  refs.addBtnQueue.addEventListener('click', toggleToQueue);\r\n\r\n  //удаление ненужных слушателей\r\n\r\n  $btnsWrapper.removeEventListener('click', plaginationNavigation);\r\n  refs.watchedBtn.removeEventListener('click', drawWatchedFilmList);\r\n  refs.queueBtn.removeEventListener('click', drawQueueFilmList);\r\n\r\n  function createdVideoTpl() {\r\n    const iframeAttrs = {\r\n      class: 'js-video__iframe',\r\n      id: 'ytplayer',\r\n      type: 'text/html',\r\n      width: '450',\r\n      height: '300',\r\n      src: `http://www.youtube.com/embed/${videoYou}?autoplay=0&origin=http://example.com`,\r\n      frameborder: '0',\r\n    };\r\n\r\n    const iframe = createElement('iframe', iframeAttrs);\r\n\r\n    return iframe;\r\n  }\r\n  if (versionAtLocalStorage === Version.PRO) {\r\n    fetchVideo();\r\n  }\r\n}\r\n\r\nfunction createElement(name, attrs = {}) {\r\n  const element = document.createElement(name);\r\n  for (const key in attrs) {\r\n    element.setAttribute(key, attrs[key]);\r\n  }\r\n  return element;\r\n}\r\n// TODO;\r\n\r\n/**\r\n * 3 page end\r\n *\r\n */\r\n\r\n// TODO;\r\n\r\n/**\r\n * 4 page start\r\n *\r\n */\r\n\r\n// ПЕРВАЯ ФУНКИЯ\r\n\r\nconst watchedBtnRef = document.querySelector('.add-btn_watched');\r\nconst queueBtnRef = document.querySelector('.add-btn_queue');\r\nconst posterRef = document.querySelector('.details-page__image');\r\nconst titleRef = document.querySelector('.title_original');\r\nconst votesRef = document.querySelector('.about-list__descr_votes');\r\nconst popularityRef = document.querySelector('.about-list__descr_popularity');\r\nconst originalTitleRef = document.querySelector('.about-list__descr_title');\r\nconst genreRef = document.querySelector('.about-list__descr_genre');\r\nconst plotRef = document.querySelector('.plot__descr');\r\n\r\nfunction monitorButtonStatusText() {\r\n  const filmQueueLocalStorage =\r\n    JSON.parse(localStorage.getItem('filmQueue')) || [];\r\n  const queueId = filmQueueLocalStorage.map(item => item.id);\r\n  const filmsWatchedLocalStorage =\r\n    JSON.parse(localStorage.getItem('filmWatched')) || [];\r\n\r\n  const watchedId = filmsWatchedLocalStorage.map(item => item.id);\r\n\r\n  if (queueId.includes(selectFilm.id)) {\r\n    queueBtnRef.textContent = 'Delete from queue';\r\n    localStorage.setItem('filmQueueBtnStatus', queueBtnRef.textContent);\r\n  } else {\r\n    queueBtnRef.textContent = 'Add to queue';\r\n    localStorage.setItem('filmQueueBtnStatus', queueBtnRef.textContent);\r\n  }\r\n\r\n  if (watchedId.includes(selectFilm.id)) {\r\n    watchedBtnRef.textContent = 'Delete from watched';\r\n    localStorage.setItem('filmWatchedBtnStatus', watchedBtnRef.textContent);\r\n  } else {\r\n    watchedBtnRef.textContent = 'Add to watched';\r\n    localStorage.setItem('filmWatchedBtnStatus', watchedBtnRef.textContent);\r\n  }\r\n}\r\n// ВТОРАЯ ФУНКЦИЯ\r\nfunction toggleToQueue() {\r\n  let filmQueueLocalStorage =\r\n    JSON.parse(localStorage.getItem('filmQueue')) || [];\r\n  let itemId = filmQueueLocalStorage.map(item => item.id);\r\n  if (!itemId.includes(selectFilm.id)) {\r\n    filmQueueLocalStorage.push(selectFilm);\r\n    localStorage.setItem('filmQueue', JSON.stringify(filmQueueLocalStorage));\r\n  } else {\r\n    filmQueueLocalStorage = filmQueueLocalStorage.filter(\r\n      film => film.id !== selectFilm.id,\r\n    );\r\n    localStorage.setItem('filmQueue', JSON.stringify(filmQueueLocalStorage));\r\n  }\r\n  monitorButtonStatusText();\r\n}\r\n// ТРЕТЬЯ ФУНКЦИЯ\r\nfunction toggleToWatched() {\r\n  let filmsWatchedLocalStorage =\r\n    JSON.parse(localStorage.getItem('filmWatched')) || [];\r\n  let itemId = filmsWatchedLocalStorage.map(item => item.id);\r\n  if (!itemId.includes(selectFilm.id)) {\r\n    filmsWatchedLocalStorage.push(selectFilm);\r\n    localStorage.setItem(\r\n      'filmWatched',\r\n      JSON.stringify(filmsWatchedLocalStorage),\r\n    );\r\n  } else {\r\n    filmsWatchedLocalStorage = filmsWatchedLocalStorage.filter(\r\n      film => film.id !== selectFilm.id,\r\n    );\r\n    localStorage.setItem(\r\n      'filmWatched',\r\n      JSON.stringify(filmsWatchedLocalStorage),\r\n    );\r\n  }\r\n  monitorButtonStatusText();\r\n}\r\n\r\n// ЧЕТВЁРТАЯ ФЕНКЦИЯ\r\n\r\nfunction showDetails(selectFilm) {\r\n  const imgUrl = selectFilm.poster_path\r\n    ? `https://image.tmdb.org/t/p/w500/${selectFilm.poster_path}`\r\n    : IMAGE_NOT_FOUND;\r\n  posterRef.src = imgUrl;\r\n  titleRef.textContent = selectFilm.title;\r\n  votesRef.textContent = `${selectFilm.vote_average} / ${selectFilm.vote_count}`;\r\n  popularityRef.textContent = selectFilm.popularity;\r\n  originalTitleRef.textContent = selectFilm.title;\r\n  plotRef.textContent = selectFilm.overview;\r\n\r\n  let filmsGenres = [];\r\n  const genresIdArray = selectFilm.genre_ids;\r\n  genresIdArray.filter(item => {\r\n    const genresArray = genres.filter(genre => genre.id === item);\r\n    return genresArray.forEach(item => filmsGenres.push(item.name));\r\n  });\r\n  genreRef.textContent = filmsGenres.join(', ');\r\n\r\n  monitorButtonStatusText();\r\n}\r\n\r\n/**\r\n * 4 page end\r\n *\r\n */\r\n\r\n// TODO;\r\n\r\n/**\r\n * 5 page start\r\n *\r\n */\r\n\r\nconst $libraryList = document.querySelector('ul.library-list');\r\n\r\nconst createLibraryCardFunc = (imgPath, filmTitle, movieId, voteAverage) => {\r\n  //создаем елементы\r\n  const $li = document.createElement('li');\r\n  const $p = document.createElement('p');\r\n  const $img = document.createElement('img');\r\n  const $vote = document.createElement('span');\r\n\r\n  //ставим классы\r\n  $li.className = 'movies__item';\r\n  $p.className = 'movies__title ';\r\n  $vote.className = 'movies__item-rating';\r\n  $img.className = 'movies__image';\r\n\r\n  //наполняем елементы\r\n  $img.setAttribute('src', IMG_URL + imgPath);\r\n  $p.textContent = filmTitle;\r\n  $vote.textContent = voteAverage;\r\n\r\n  // собираем li\r\n  $li.append($p);\r\n  $li.append($img);\r\n  $li.append($vote);\r\n  //добавляем слушатель с movieId и значением false (для movieLibarary)\r\n  $li.addEventListener('click', function () {\r\n    activeDetailsPage(movieId, true);\r\n  });\r\n\r\n  return $li;\r\n};\r\n\r\nfunction switchActiveButtonTo(btnName) {\r\n  switch (btnName) {\r\n    case 'queue':\r\n      // убрать кнопку с watched\r\n      if (refs.watchedBtn.classList.contains('onClickLibrary')) {\r\n        refs.watchedBtn.classList.remove('onClickLibrary');\r\n      }\r\n      //  добавить новую кнопку на queue\r\n      refs.queueBtn.classList.add('onClickLibrary');\r\n      break;\r\n\r\n    case 'watched':\r\n      // убрать кнопку с queue\r\n      if (refs.queueBtn.classList.contains('onClickLibrary')) {\r\n        refs.queueBtn.classList.remove('onClickLibrary');\r\n      }\r\n      //  добавить кнопку на watched\r\n      refs.watchedBtn.classList.add('onClickLibrary');\r\n  }\r\n}\r\n\r\nfunction drawQueueFilmList() {\r\n  //изменить активную кнопку на watched\r\n  switchActiveButtonTo('queue');\r\n  // очищаем html\r\n  $libraryList.innerHTML = '';\r\n  const $fragment = document.createDocumentFragment();\r\n  //взять из localStorage\r\n\r\n  const filmsQueue = JSON.parse(localStorage.getItem('filmQueue'));\r\n  //отрисовываем фильмы если они есть\r\n  if (filmsQueue && filmsQueue.length > 0) {\r\n    filmsQueue.forEach(movie => {\r\n      const $li = createLibraryCardFunc(\r\n        movie.poster_path,\r\n        movie.original_title,\r\n        movie.id,\r\n        movie.vote_average,\r\n      );\r\n      $fragment.appendChild($li);\r\n    });\r\n    //показываем ошибку, если фильмов нет\r\n  } else {\r\n    const $error = document.createElement('p');\r\n    $error.className = 'movies__not-found';\r\n    $error.textContent = 'You do not have to queue movies to watch.Add them';\r\n    $fragment.append($error);\r\n  }\r\n\r\n  //обновляем страницу\r\n  $libraryList.append($fragment);\r\n}\r\n\r\n// drawQueueFilmList()\r\nfunction drawWatchedFilmList() {\r\n  //изменить активную кнопку на watched\r\n  switchActiveButtonTo('watched');\r\n  //очищаем html\r\n  $libraryList.innerHTML = '';\r\n  const $fragment = document.createDocumentFragment();\r\n  //взять из localStorage\r\n  const filmsWatched = JSON.parse(localStorage.getItem('filmWatched'));\r\n  if (filmsWatched && filmsWatched.length > 0) {\r\n    filmsWatched.forEach(movie => {\r\n      const $li = createLibraryCardFunc(\r\n        movie.poster_path,\r\n        movie.original_title,\r\n        movie.id,\r\n        movie.vote_average,\r\n      );\r\n      $fragment.appendChild($li);\r\n    });\r\n  } else {\r\n    const $error = document.createElement('p');\r\n    $error.className = 'movies__not-found';\r\n    $error.textContent = 'You do not have to queue movies to watch.Add them';\r\n    $fragment.append($error);\r\n  }\r\n\r\n  $libraryList.append($fragment);\r\n}\r\n\r\n// TODO;\r\n/**\r\n * 5 page end\r\n *\r\n */\r\n// TODO;\r\n/**\r\n * 6 page start\r\n *\r\n */\r\n\r\n//settings\r\n\r\nconst defaultVersion = Version.REGULAR;\r\nconst body = document.querySelector('body');\r\nconst toolbar = document.querySelector('input.js-switch-input');\r\nconst versionDescription = document.querySelector('ul.features');\r\nconst youtubeTrailer = document.querySelector('.js-video');\r\n//set theme\r\nbody.classList.add(versionAtLocalStorage || defaultVersion);\r\nversionDescription.classList.add(versionAtLocalStorage || defaultVersion);\r\n//change toolbar to checked when dark theme applied\r\n\r\nif (versionAtLocalStorage === Version.REGULAR) {\r\n  toolbar.setAttribute('checked', true);\r\n}\r\n\r\n//setup toolbar listener\r\nconst changeVersion = () => {\r\n  location.reload();\r\n  if (body.classList.contains(Version.REGULAR)) {\r\n    body.classList.replace(Version.REGULAR, Version.PRO);\r\n    youtubeTrailer.classList.remove('visually-hidden');\r\n    versionDescription.classList.replace(Version.REGULAR, Version.PRO);\r\n    localStorage.setItem('version', Version.PRO);\r\n    versionAtLocalStorage = Version.PRO;\r\n    return;\r\n  }\r\n\r\n  if (body.classList.contains(Version.PRO)) {\r\n    body.classList.replace(Version.PRO, Version.REGULAR);\r\n    youtubeTrailer.classList.add('visually-hidden');\r\n    versionDescription.classList.replace(Version.PRO, Version.REGULAR);\r\n    localStorage.setItem('version', Version.REGULAR);\r\n    versionAtLocalStorage = Version.REGULAR;\r\n    return;\r\n  }\r\n};\r\n\r\ntoolbar.addEventListener('change', changeVersion);\r\n\r\n// TODO;\r\n/**\r\n * 6 page end\r\n *\r\n */\r\n"],"sourceRoot":""}